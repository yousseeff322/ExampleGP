#ifndef MAIN_H_
#define MAIN_H_



//////////////////////////////////////////////////////////////////////////////////////////////////////////
										/*MCAL*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "STD_type.h"
#include "BIT_MATH.h"
#include "RCC_interface.h"
#include "DIO_interface.h"
#include "NVIC_interface.h"
#include "TIMER2_interface.h"
#include "TIMER3_interface.h"
#include "CAN_interface.h"
//////////////////////////////////////////////////////////////////////////////////////////////////////////
										/*HAL*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "HULTRA_interface.h"
#include "IR_Interface.h"
#include "LDR_interface.h"
#include "MOTOR_interface.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////
										/*RTOS*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include  <string.h>
#include "timers.h"
#include "semphr.h"
//////////////////////////////////////////////////////////////////////////////////////////////////////////
										/*LIB*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "Function_Help_Tasks.h"



QueueHandle_t canQueue;
SemaphoreHandle_t canSemaphore;

typedef struct {
    uint8_t LEFT_LDR;
    uint8_t RIGHT_LDR;
    uint8_t LEFT_IR;
    uint8_t RIGHT_IR;
    uint8_t ultrasonic;
} SensorData_t;


/* Function prototypes */
void CANReceiveTask(void *pvParameters) ;
void SystemInit(void) ;
void CANReceiveTask(void *pvParameters);
void AEBTask(void *pvParameters);
void LKSTask(void *pvParameters);
void ACCTask(void *pvParameters);
void ALCTask(void *pvParameters);
void BluetoothTask(void *pvParameters);







#endif
